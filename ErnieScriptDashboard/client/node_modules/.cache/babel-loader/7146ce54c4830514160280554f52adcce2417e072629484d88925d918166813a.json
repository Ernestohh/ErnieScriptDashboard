{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ernes\\\\MemoryError\\\\Lua_Scripts\\\\collection\\\\Dashboard\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Dashboard from './components/Dashboard';\nimport Sidebar from './components/Sidebar';\nimport AlertPanel from './components/AlertPanel';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\nfunction App() {\n  _s();\n  const [scripts, setScripts] = useState({});\n  const [selectedScript, setSelectedScript] = useState(null);\n  const [alerts, setAlerts] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n\n  // Fetch script data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [scriptsRes, alertsRes] = await Promise.all([axios.get(`${API_URL}/api/scripts`), axios.get(`${API_URL}/api/alerts?unread=true`)]);\n        setScripts(scriptsRes.data);\n        setAlerts(alertsRes.data);\n        setConnectionStatus('connected');\n\n        // Auto-select first script if none selected\n        if (!selectedScript && Object.keys(scriptsRes.data).length > 0) {\n          setSelectedScript(Object.keys(scriptsRes.data)[0]);\n        }\n      } catch (error) {\n        console.error('Failed to fetch data:', error);\n        setConnectionStatus('error');\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 2000); // Update every 2 seconds\n\n    return () => clearInterval(interval);\n  }, [selectedScript]);\n\n  // Mark alert as read\n  const markAlertRead = async alertId => {\n    try {\n      await axios.patch(`${API_URL}/api/alerts/${alertId}`);\n      setAlerts(alerts.filter(a => a.id !== alertId));\n    } catch (error) {\n      console.error('Failed to mark alert as read:', error);\n    }\n  };\n\n  // Remove script\n  const removeScript = async name => {\n    try {\n      await axios.delete(`${API_URL}/api/scripts/${name}`);\n      if (selectedScript === name) {\n        setSelectedScript(null);\n      }\n    } catch (error) {\n      console.error('Failed to remove script:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      scripts: scripts,\n      selectedScript: selectedScript,\n      onSelectScript: setSelectedScript,\n      onRemoveScript: removeScript,\n      connectionStatus: connectionStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [alerts.length > 0 && /*#__PURE__*/_jsxDEV(AlertPanel, {\n        alerts: alerts,\n        onDismiss: markAlertRead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), selectedScript && scripts[selectedScript] ? /*#__PURE__*/_jsxDEV(Dashboard, {\n        script: scripts[selectedScript],\n        onRemove: () => removeScript(selectedScript)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-script-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No Script Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a script from the sidebar or wait for scripts to connect.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"T03ezRxD7MYckhUfPFBg4OMaPrE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Dashboard","Sidebar","AlertPanel","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","App","_s","scripts","setScripts","selectedScript","setSelectedScript","alerts","setAlerts","connectionStatus","setConnectionStatus","fetchData","scriptsRes","alertsRes","Promise","all","get","data","Object","keys","length","error","console","interval","setInterval","clearInterval","markAlertRead","alertId","patch","filter","a","id","removeScript","name","delete","className","children","onSelectScript","onRemoveScript","fileName","_jsxFileName","lineNumber","columnNumber","onDismiss","script","onRemove","_c","$RefreshReg$"],"sources":["C:/Users/ernes/MemoryError/Lua_Scripts/collection/Dashboard/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Dashboard from './components/Dashboard';\r\nimport Sidebar from './components/Sidebar';\r\nimport AlertPanel from './components/AlertPanel';\r\nimport './styles/App.css';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\r\n\r\nfunction App() {\r\n  const [scripts, setScripts] = useState({});\r\n  const [selectedScript, setSelectedScript] = useState(null);\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\r\n\r\n  // Fetch script data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [scriptsRes, alertsRes] = await Promise.all([\r\n          axios.get(`${API_URL}/api/scripts`),\r\n          axios.get(`${API_URL}/api/alerts?unread=true`)\r\n        ]);\r\n\r\n        setScripts(scriptsRes.data);\r\n        setAlerts(alertsRes.data);\r\n        setConnectionStatus('connected');\r\n\r\n        // Auto-select first script if none selected\r\n        if (!selectedScript && Object.keys(scriptsRes.data).length > 0) {\r\n          setSelectedScript(Object.keys(scriptsRes.data)[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n        setConnectionStatus('error');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 2000); // Update every 2 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [selectedScript]);\r\n\r\n  // Mark alert as read\r\n  const markAlertRead = async (alertId) => {\r\n    try {\r\n      await axios.patch(`${API_URL}/api/alerts/${alertId}`);\r\n      setAlerts(alerts.filter(a => a.id !== alertId));\r\n    } catch (error) {\r\n      console.error('Failed to mark alert as read:', error);\r\n    }\r\n  };\r\n\r\n  // Remove script\r\n  const removeScript = async (name) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/api/scripts/${name}`);\r\n      if (selectedScript === name) {\r\n        setSelectedScript(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to remove script:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Sidebar\r\n        scripts={scripts}\r\n        selectedScript={selectedScript}\r\n        onSelectScript={setSelectedScript}\r\n        onRemoveScript={removeScript}\r\n        connectionStatus={connectionStatus}\r\n      />\r\n\r\n      <div className=\"main-content\">\r\n        {alerts.length > 0 && (\r\n          <AlertPanel\r\n            alerts={alerts}\r\n            onDismiss={markAlertRead}\r\n          />\r\n        )}\r\n\r\n        {selectedScript && scripts[selectedScript] ? (\r\n          <Dashboard\r\n            script={scripts[selectedScript]}\r\n            onRemove={() => removeScript(selectedScript)}\r\n          />\r\n        ) : (\r\n          <div className=\"no-script-selected\">\r\n            <h2>No Script Selected</h2>\r\n            <p>Select a script from the sidebar or wait for scripts to connect.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}