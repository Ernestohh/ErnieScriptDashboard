{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ernes\\\\MemoryError\\\\Lua_Scripts\\\\collection\\\\Dashboard\\\\client\\\\src\\\\components\\\\Dashboard.js\";\nimport React from 'react';\nimport MetricCard from './MetricCard';\nimport StateHistory from './StateHistory';\nimport PerformanceChart from './PerformanceChart';\nimport { formatDistanceToNow } from 'date-fns';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  script,\n  onRemove\n}) {\n  const {\n    name,\n    script: scriptName,\n    state,\n    data,\n    lastUpdate,\n    history\n  } = script;\n\n  // Format runtime\n  const formatRuntime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    return `${hours}h ${minutes}m ${secs}s`;\n  };\n\n  // Extract chart data if available\n  const getChartData = key => {\n    const chartKey = `${key}_chart`;\n    return data[chartKey] || null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"script-name\",\n          children: scriptName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"last-update\",\n          children: [\"Last update: \", formatDistanceToNow(lastUpdate), \" ago\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-btn\",\n          onClick: onRemove,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state-display\",\n        children: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-grid\",\n      children: [data.runtime && /*#__PURE__*/_jsxDEV(MetricCard, {\n        label: \"Runtime\",\n        value: formatRuntime(data.runtime),\n        icon: \"\\u23F1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), data.xpGained !== undefined && /*#__PURE__*/_jsxDEV(MetricCard, {\n        label: \"XP Gained\",\n        value: data.xpGained.toLocaleString(),\n        icon: \"\\u2728\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), data.xpPerHour !== undefined && /*#__PURE__*/_jsxDEV(MetricCard, {\n        label: \"XP/Hour\",\n        value: data.xpPerHour.toLocaleString(),\n        icon: \"\\uD83D\\uDCC8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), data.efficiency !== undefined && /*#__PURE__*/_jsxDEV(MetricCard, {\n        label: \"Efficiency\",\n        value: `${data.efficiency}%`,\n        icon: \"\\u26A1\",\n        status: data.efficiency > 80 ? 'good' : 'warning'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), Object.entries(data).map(([key, value]) => {\n        if (value && typeof value === 'object' && value.percentage !== undefined) {\n          return /*#__PURE__*/_jsxDEV(MetricCard, {\n            label: key.replace(/_/g, ' '),\n            value: `${value.current}/${value.total}`,\n            progress: value.percentage,\n            icon: \"\\uD83D\\uDCCA\"\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this);\n        }\n        return null;\n      }), Object.entries(data).map(([key, value]) => {\n        // Skip special keys\n        if (key.includes('_chart') || key.includes('_time') || key === 'runtime' || key === 'xpGained' || key === 'xpPerHour' || key === 'efficiency' || typeof value === 'object' && value.percentage !== undefined) {\n          return null;\n        }\n        return /*#__PURE__*/_jsxDEV(MetricCard, {\n          label: key.replace(/_/g, ' '),\n          value: typeof value === 'number' ? value.toLocaleString() : value,\n          icon: \"\\uD83D\\uDCCA\"\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), getChartData('xpTrend') && /*#__PURE__*/_jsxDEV(PerformanceChart, {\n      title: \"XP Trend\",\n      data: getChartData('xpTrend')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), history && history.length > 0 && /*#__PURE__*/_jsxDEV(StateHistory, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","MetricCard","StateHistory","PerformanceChart","formatDistanceToNow","jsxDEV","_jsxDEV","Dashboard","script","onRemove","name","scriptName","state","data","lastUpdate","history","formatRuntime","seconds","hours","Math","floor","minutes","secs","getChartData","key","chartKey","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","runtime","label","value","icon","xpGained","undefined","toLocaleString","xpPerHour","efficiency","status","Object","entries","map","percentage","replace","current","total","progress","includes","title","length","_c","$RefreshReg$"],"sources":["C:/Users/ernes/MemoryError/Lua_Scripts/collection/Dashboard/client/src/components/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport MetricCard from './MetricCard';\r\nimport StateHistory from './StateHistory';\r\nimport PerformanceChart from './PerformanceChart';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport '../styles/Dashboard.css';\r\n\r\nfunction Dashboard({ script, onRemove }) {\r\n  const { name, script: scriptName, state, data, lastUpdate, history } = script;\r\n\r\n  // Format runtime\r\n  const formatRuntime = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n    return `${hours}h ${minutes}m ${secs}s`;\r\n  };\r\n\r\n  // Extract chart data if available\r\n  const getChartData = (key) => {\r\n    const chartKey = `${key}_chart`;\r\n    return data[chartKey] || null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"header-info\">\r\n          <h1>{name}</h1>\r\n          <span className=\"script-name\">{scriptName}</span>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          <span className=\"last-update\">\r\n            Last update: {formatDistanceToNow(lastUpdate)} ago\r\n          </span>\r\n          <button className=\"remove-btn\" onClick={onRemove}>×</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"current-state\">\r\n        <h2>Current State</h2>\r\n        <div className=\"state-display\">{state}</div>\r\n      </div>\r\n\r\n      <div className=\"metrics-grid\">\r\n        {data.runtime && (\r\n          <MetricCard\r\n            label=\"Runtime\"\r\n            value={formatRuntime(data.runtime)}\r\n            icon=\"⏱️\"\r\n          />\r\n        )}\r\n\r\n        {data.xpGained !== undefined && (\r\n          <MetricCard\r\n            label=\"XP Gained\"\r\n            value={data.xpGained.toLocaleString()}\r\n            icon=\"✨\"\r\n          />\r\n        )}\r\n\r\n        {data.xpPerHour !== undefined && (\r\n          <MetricCard\r\n            label=\"XP/Hour\"\r\n            value={data.xpPerHour.toLocaleString()}\r\n            icon=\"📈\"\r\n          />\r\n        )}\r\n\r\n        {data.efficiency !== undefined && (\r\n          <MetricCard\r\n            label=\"Efficiency\"\r\n            value={`${data.efficiency}%`}\r\n            icon=\"⚡\"\r\n            status={data.efficiency > 80 ? 'good' : 'warning'}\r\n          />\r\n        )}\r\n\r\n        {/* Render progress bars */}\r\n        {Object.entries(data).map(([key, value]) => {\r\n          if (value && typeof value === 'object' && value.percentage !== undefined) {\r\n            return (\r\n              <MetricCard\r\n                key={key}\r\n                label={key.replace(/_/g, ' ')}\r\n                value={`${value.current}/${value.total}`}\r\n                progress={value.percentage}\r\n                icon=\"📊\"\r\n              />\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n\r\n        {/* Render other metrics */}\r\n        {Object.entries(data).map(([key, value]) => {\r\n          // Skip special keys\r\n          if (key.includes('_chart') || key.includes('_time') ||\r\n              key === 'runtime' || key === 'xpGained' ||\r\n              key === 'xpPerHour' || key === 'efficiency' ||\r\n              (typeof value === 'object' && value.percentage !== undefined)) {\r\n            return null;\r\n          }\r\n\r\n          return (\r\n            <MetricCard\r\n              key={key}\r\n              label={key.replace(/_/g, ' ')}\r\n              value={typeof value === 'number' ? value.toLocaleString() : value}\r\n              icon=\"📊\"\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Performance charts */}\r\n      {getChartData('xpTrend') && (\r\n        <PerformanceChart\r\n          title=\"XP Trend\"\r\n          data={getChartData('xpTrend')}\r\n        />\r\n      )}\r\n\r\n      {/* State history */}\r\n      {history && history.length > 0 && (\r\n        <StateHistory history={history} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,mBAAmB,QAAQ,UAAU;AAC9C,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,SAASA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EACvC,MAAM;IAAEC,IAAI;IAAEF,MAAM,EAAEG,UAAU;IAAEC,KAAK;IAAEC,IAAI;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAGP,MAAM;;EAE7E;EACA,MAAMQ,aAAa,GAAIC,OAAO,IAAK;IACjC,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,IAAI,CAAC;IACxC,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,OAAO,GAAG,IAAI,GAAI,EAAE,CAAC;IACjD,MAAMK,IAAI,GAAGL,OAAO,GAAG,EAAE;IACzB,OAAO,GAAGC,KAAK,KAAKG,OAAO,KAAKC,IAAI,GAAG;EACzC,CAAC;;EAED;EACA,MAAMC,YAAY,GAAIC,GAAG,IAAK;IAC5B,MAAMC,QAAQ,GAAG,GAAGD,GAAG,QAAQ;IAC/B,OAAOX,IAAI,CAACY,QAAQ,CAAC,IAAI,IAAI;EAC/B,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBrB,OAAA;MAAKoB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BrB,OAAA;QAAKoB,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BrB,OAAA;UAAAqB,QAAA,EAAKjB;QAAI;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACfzB,OAAA;UAAMoB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAEhB;QAAU;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACNzB,OAAA;QAAKoB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BrB,OAAA;UAAMoB,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAC,eACf,EAACvB,mBAAmB,CAACU,UAAU,CAAC,EAAC,MAChD;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPzB,OAAA;UAAQoB,SAAS,EAAC,YAAY;UAACM,OAAO,EAAEvB,QAAS;UAAAkB,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENzB,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BrB,OAAA;QAAAqB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBzB,OAAA;QAAKoB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEf;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eAENzB,OAAA;MAAKoB,SAAS,EAAC,cAAc;MAAAC,QAAA,GAC1Bd,IAAI,CAACoB,OAAO,iBACX3B,OAAA,CAACL,UAAU;QACTiC,KAAK,EAAC,SAAS;QACfC,KAAK,EAAEnB,aAAa,CAACH,IAAI,CAACoB,OAAO,CAAE;QACnCG,IAAI,EAAC;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CACF,EAEAlB,IAAI,CAACwB,QAAQ,KAAKC,SAAS,iBAC1BhC,OAAA,CAACL,UAAU;QACTiC,KAAK,EAAC,WAAW;QACjBC,KAAK,EAAEtB,IAAI,CAACwB,QAAQ,CAACE,cAAc,CAAC,CAAE;QACtCH,IAAI,EAAC;MAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CACF,EAEAlB,IAAI,CAAC2B,SAAS,KAAKF,SAAS,iBAC3BhC,OAAA,CAACL,UAAU;QACTiC,KAAK,EAAC,SAAS;QACfC,KAAK,EAAEtB,IAAI,CAAC2B,SAAS,CAACD,cAAc,CAAC,CAAE;QACvCH,IAAI,EAAC;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CACF,EAEAlB,IAAI,CAAC4B,UAAU,KAAKH,SAAS,iBAC5BhC,OAAA,CAACL,UAAU;QACTiC,KAAK,EAAC,YAAY;QAClBC,KAAK,EAAE,GAAGtB,IAAI,CAAC4B,UAAU,GAAI;QAC7BL,IAAI,EAAC,QAAG;QACRM,MAAM,EAAE7B,IAAI,CAAC4B,UAAU,GAAG,EAAE,GAAG,MAAM,GAAG;MAAU;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CACF,EAGAY,MAAM,CAACC,OAAO,CAAC/B,IAAI,CAAC,CAACgC,GAAG,CAAC,CAAC,CAACrB,GAAG,EAAEW,KAAK,CAAC,KAAK;QAC1C,IAAIA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACW,UAAU,KAAKR,SAAS,EAAE;UACxE,oBACEhC,OAAA,CAACL,UAAU;YAETiC,KAAK,EAAEV,GAAG,CAACuB,OAAO,CAAC,IAAI,EAAE,GAAG,CAAE;YAC9BZ,KAAK,EAAE,GAAGA,KAAK,CAACa,OAAO,IAAIb,KAAK,CAACc,KAAK,EAAG;YACzCC,QAAQ,EAAEf,KAAK,CAACW,UAAW;YAC3BV,IAAI,EAAC;UAAI,GAJJZ,GAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKT,CAAC;QAEN;QACA,OAAO,IAAI;MACb,CAAC,CAAC,EAGDY,MAAM,CAACC,OAAO,CAAC/B,IAAI,CAAC,CAACgC,GAAG,CAAC,CAAC,CAACrB,GAAG,EAAEW,KAAK,CAAC,KAAK;QAC1C;QACA,IAAIX,GAAG,CAAC2B,QAAQ,CAAC,QAAQ,CAAC,IAAI3B,GAAG,CAAC2B,QAAQ,CAAC,OAAO,CAAC,IAC/C3B,GAAG,KAAK,SAAS,IAAIA,GAAG,KAAK,UAAU,IACvCA,GAAG,KAAK,WAAW,IAAIA,GAAG,KAAK,YAAY,IAC1C,OAAOW,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACW,UAAU,KAAKR,SAAU,EAAE;UACjE,OAAO,IAAI;QACb;QAEA,oBACEhC,OAAA,CAACL,UAAU;UAETiC,KAAK,EAAEV,GAAG,CAACuB,OAAO,CAAC,IAAI,EAAE,GAAG,CAAE;UAC9BZ,KAAK,EAAE,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACI,cAAc,CAAC,CAAC,GAAGJ,KAAM;UAClEC,IAAI,EAAC;QAAI,GAHJZ,GAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIT,CAAC;MAEN,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGLR,YAAY,CAAC,SAAS,CAAC,iBACtBjB,OAAA,CAACH,gBAAgB;MACfiD,KAAK,EAAC,UAAU;MAChBvC,IAAI,EAAEU,YAAY,CAAC,SAAS;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CACF,EAGAhB,OAAO,IAAIA,OAAO,CAACsC,MAAM,GAAG,CAAC,iBAC5B/C,OAAA,CAACJ,YAAY;MAACa,OAAO,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAClC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACuB,EAAA,GA1HQ/C,SAAS;AA4HlB,eAAeA,SAAS;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}